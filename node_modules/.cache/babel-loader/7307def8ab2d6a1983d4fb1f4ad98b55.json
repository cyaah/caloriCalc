{"ast":null,"code":"import _toConsumableArray from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/calvin/Documents/calorie_counter_v1/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Spinner from \"./Spinner\";\nimport FoodsList from \"./FoodsList\";\nimport Card from \"./Card\";\nimport { SEARCH_ENDPOINT } from \"../usdaAPI\";\nimport { formatedFoodQuery, kCalSum } from \"../utils\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      foodQuery: \"\",\n      apiSearchList: [],\n      apiSearchListIsLoaded: false,\n      fetchApiSearchListErr: undefined,\n      selectedFoods: [],\n      kcalValues: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      fetch(SEARCH_ENDPOINT(_this.state.foodQuery)).then(function (res) {\n        return res.json();\n      }).then(function (listObj) {\n        return _this.setState({\n          apiSearchList: listObj.list.item,\n          apiSearchListIsLoaded: true\n        });\n      }).catch(function (err) {\n        return _this.setState({\n          fetchApiSearchListErr: err.message\n        });\n      }); // console.log(this.foodInput.value);\n\n      _this.foodInput.value = \"\";\n    };\n\n    _this.handleFoodQuery = function (e) {\n      return _this.setState({\n        foodQuery: formatedFoodQuery(e.target.value)\n      });\n    };\n\n    _this.handleSelectedFood = function (foodId) {\n      if (foodId) {\n        _this.setState({\n          selectedFoods: _toConsumableArray(_this.state.selectedFoods).concat(_toConsumableArray(_this.state.apiSearchList.filter(function (item) {\n            return item.ndbno === foodId;\n          })))\n        });\n      }\n    };\n\n    _this.handleKcalValue = function (kcal, ndbno) {\n      _this.setState({\n        kcalValues: _toConsumableArray(_this.state.kcalValues).concat([{\n          ndbno: ndbno || \"\",\n          kcal: kcal || 0\n        }])\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          foodQuery = _this$state.foodQuery,\n          apiSearchList = _this$state.apiSearchList,\n          apiSearchListIsLoaded = _this$state.apiSearchListIsLoaded,\n          selectedFoods = _this$state.selectedFoods,\n          kcalValues = _this$state.kcalValues;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"search-food-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"foodInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"foodInput\",\n        className: \"food-input\",\n        type: \"text\",\n        ref: function ref(el) {\n          return _this2.foodInput = el;\n        },\n        onChange: function onChange(e) {\n          return _this2.handleFoodQuery(e);\n        },\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"search-food-btn\",\n        type: \"submit\",\n        disabled: foodQuery === \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Search for food\")), apiSearchListIsLoaded ? React.createElement(FoodsList, {\n        optionList: apiSearchList,\n        trackFood: this.handleSelectedFood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }) : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cards-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, selectedFoods.length > 0 && selectedFoods.map(function (card, index) {\n        return React.createElement(Card, {\n          key: card.ndbno + index,\n          ndbno: card.ndbno,\n          trackKcalValue: _this2.handleKcalValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      })), kcalValues.length > 0 && React.createElement(\"div\", {\n        className: \"total-calories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"The sum calories of the selected foods is \", kCalSum(kcalValues), \" \", \"kcal\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/calvin/Documents/calorie_counter_v1/src/components/App.js"],"names":["React","Component","Spinner","FoodsList","Card","SEARCH_ENDPOINT","formatedFoodQuery","kCalSum","App","state","foodQuery","apiSearchList","apiSearchListIsLoaded","fetchApiSearchListErr","undefined","selectedFoods","kcalValues","handleSubmit","e","preventDefault","fetch","then","res","json","listObj","setState","list","item","catch","err","message","foodInput","value","handleFoodQuery","target","handleSelectedFood","foodId","filter","ndbno","handleKcalValue","kcal","el","length","map","card","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Spinner from \"./Spinner\";\nimport FoodsList from \"./FoodsList\";\nimport Card from \"./Card\";\nimport { SEARCH_ENDPOINT } from \"../usdaAPI\";\nimport { formatedFoodQuery, kCalSum } from \"../utils\";\n\nclass App extends Component {\n  //The state in which we store the query, searchlist,\n  state = {\n    foodQuery: \"\",\n    apiSearchList: [],\n    apiSearchListIsLoaded: false,\n    fetchApiSearchListErr: undefined,\n    selectedFoods: [],\n    kcalValues: []\n  };\n\n  //AJAX request for submitting search and returning list of search results(an array)\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch(SEARCH_ENDPOINT(this.state.foodQuery))\n      .then(res => res.json())\n      .then(listObj =>\n        this.setState({\n          apiSearchList: listObj.list.item,\n          apiSearchListIsLoaded: true\n        })\n      )\n      .catch(err =>\n        this.setState({\n          fetchApiSearchListErr: err.message\n        })\n      );\n    // console.log(this.foodInput.value);\n    this.foodInput.value = \"\";\n  };\n\n  handleFoodQuery = e =>\n    this.setState({\n      foodQuery: formatedFoodQuery(e.target.value)\n    });\n\n  handleSelectedFood = foodId => {\n    if (foodId) {\n      this.setState({\n        selectedFoods: [\n          ...this.state.selectedFoods,\n          ...this.state.apiSearchList.filter(item => item.ndbno === foodId)\n        ]\n      });\n    }\n  };\n\n  handleKcalValue = (kcal, ndbno) => {\n    this.setState({\n      kcalValues: [\n        ...this.state.kcalValues,\n        { ndbno: ndbno || \"\", kcal: kcal || 0 }\n      ]\n    });\n  };\n\n  render() {\n    const {\n      foodQuery,\n      apiSearchList,\n      apiSearchListIsLoaded,\n      selectedFoods,\n      kcalValues\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <form className=\"search-food-form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"foodInput\">\n            <input\n              id=\"foodInput\"\n              className=\"food-input\"\n              type=\"text\"\n              ref={el => (this.foodInput = el)}\n              onChange={e => this.handleFoodQuery(e)}\n              autoFocus\n            />\n          </label>\n          <button\n            className=\"search-food-btn\"\n            type=\"submit\"\n            disabled={foodQuery === \"\"}\n          >\n            Search for food\n          </button>\n        </form>\n\n        {apiSearchListIsLoaded ? (\n          <FoodsList\n            optionList={apiSearchList}\n            trackFood={this.handleSelectedFood}\n          />\n        ) : (\n          <Spinner />\n        )}\n\n        <div className=\"cards-container\">\n          {selectedFoods.length > 0 &&\n            selectedFoods.map((card, index) => (\n              <Card\n                key={card.ndbno + index}\n                ndbno={card.ndbno}\n                trackKcalValue={this.handleKcalValue}\n              />\n            ))}\n        </div>\n\n        {kcalValues.length > 0 && (\n          <div className=\"total-calories\">\n            <p>\n              The sum calories of the selected foods is {kCalSum(kcalValues)}{\" \"}\n              kcal\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}