{"ast":null,"code":"import _classCallCheck from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/calvin/Documents/calorie_counter_v1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/calvin/Documents/calorie_counter_v1/src/components/Card.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NUTRIENT_ENDPOINT } from \"../usdaAPI\";\nimport { handleMissingValue } from \"../utils\";\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uniqueId: \"\",\n      foodName: \"\",\n      weight: undefined,\n      measure: \"\",\n      kcalValue: undefined,\n      fetchApiCardIsLoaded: false,\n      fetchApiCardErr: undefined\n    };\n\n    _this.passKcalValue = function (kcal, ndbno) {\n      return _this.props.trackKcalValue(kcal, ndbno);\n    };\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(NUTRIENT_ENDPOINT(this.props.ndbno)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var kcalValue = (+handleMissingValue(data.report.foods[0].nutrients[0].gm) * 4 + +handleMissingValue(data.report.foods[0].nutrients[1].gm) * 9 + +handleMissingValue(data.report.foods[0].nutrients[2].gm) * 4).toFixed(2);\n\n        _this2.setState({\n          uniqueId: data.report.foods[0].ndbno,\n          foodName: data.report.foods[0].name,\n          weight: data.report.foods[0].weight,\n          measure: data.report.foods[0].measure,\n          kcalValue: kcalValue,\n          fetchApiCardIsLoaded: true\n        });\n\n        if (!_this2.state.fetchApiCardErr) {\n          _this2.passKcalValue(kcalValue, data.report.foods[0].ndbno);\n        }\n      }).catch(function (err) {\n        return _this2.setState({\n          fetchApiCardErr: err.message\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          uniqueId = _this$state.uniqueId,\n          foodName = _this$state.foodName,\n          weight = _this$state.weight,\n          measure = _this$state.measure,\n          kcalValue = _this$state.kcalValue,\n          fetchApiCardErr = _this$state.fetchApiCardErr;\n\n      if (fetchApiCardErr) {\n        return React.createElement(\"div\", {\n          className: \"food-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, fetchApiCardErr));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"food-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Unique ID: \", uniqueId), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Food name: \", foodName), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"weight: \", weight), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"measure: \", measure), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Calories: \", kcalValue, \" cal\"));\n      }\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nCard.propTypes = {\n  ndbno: PropTypes.string.isRequired,\n  trackKcalValue: PropTypes.func.isRequired\n};\nexport default Card;","map":{"version":3,"sources":["/home/calvin/Documents/calorie_counter_v1/src/components/Card.js"],"names":["React","Component","PropTypes","NUTRIENT_ENDPOINT","handleMissingValue","Card","state","uniqueId","foodName","weight","undefined","measure","kcalValue","fetchApiCardIsLoaded","fetchApiCardErr","passKcalValue","kcal","ndbno","props","trackKcalValue","fetch","then","res","json","data","report","foods","nutrients","gm","toFixed","setState","name","catch","err","message","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NUTRIENT_ENDPOINT } from \"../usdaAPI\";\nimport { handleMissingValue } from \"../utils\";\n\nclass Card extends Component {\n  state = {\n    uniqueId: \"\",\n    foodName: \"\",\n    weight: undefined,\n    measure: \"\",\n    kcalValue: undefined,\n    fetchApiCardIsLoaded: false,\n    fetchApiCardErr: undefined\n  };\n\n  componentDidMount() {\n    fetch(NUTRIENT_ENDPOINT(this.props.ndbno))\n      .then(res => res.json())\n      .then(data => {\n        const kcalValue = (\n          +handleMissingValue(data.report.foods[0].nutrients[0].gm) * 4 +\n          +handleMissingValue(data.report.foods[0].nutrients[1].gm) * 9 +\n          +handleMissingValue(data.report.foods[0].nutrients[2].gm) * 4\n        ).toFixed(2);\n\n        this.setState({\n          uniqueId: data.report.foods[0].ndbno,\n          foodName: data.report.foods[0].name,\n          weight: data.report.foods[0].weight,\n          measure: data.report.foods[0].measure,\n          kcalValue,\n          fetchApiCardIsLoaded: true\n        });\n\n        if (!this.state.fetchApiCardErr) {\n          this.passKcalValue(kcalValue, data.report.foods[0].ndbno);\n        }\n      })\n      .catch(err =>\n        this.setState({\n          fetchApiCardErr: err.message\n        })\n      );\n  }\n\n  passKcalValue = (kcal, ndbno) => this.props.trackKcalValue(kcal, ndbno);\n\n  render() {\n    const {\n      uniqueId,\n      foodName,\n      weight,\n      measure,\n      kcalValue,\n      fetchApiCardErr\n    } = this.state;\n\n    if (fetchApiCardErr) {\n      return (\n        <div className=\"food-card\">\n          <p className=\"error\">{fetchApiCardErr}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"food-card\">\n          <p>Unique ID: {uniqueId}</p>\n          <p>Food name: {foodName}</p>\n          <p>weight: {weight}</p>\n          <p>measure: {measure}</p>\n          <p>Calories: {kcalValue} cal</p>\n        </div>\n      );\n    }\n  }\n}\n\nCard.propTypes = {\n  ndbno: PropTypes.string.isRequired,\n  trackKcalValue: PropTypes.func.isRequired\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}